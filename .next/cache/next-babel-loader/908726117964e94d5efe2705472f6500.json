{"ast":null,"code":"import { db } from './db';\nimport { distance } from './geo';\nexport const checkExists = async user => {\n  const today = new Date();\n  const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate(); //this operation\"db\" is a promise\n\n  const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(user).get();\n  const todaysData = todaysCheckin.data();\n  return todaysData;\n}; //export default checkExists\n\nexport const findChecksNearbyCheckin = async checkin => {\n  const today = new Date();\n  const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n  const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n    center: checkin.coordinates,\n    radius: 1000\n  }).get();\n  const checkinsList = [];\n  checkins.docs.forEach(doc => {\n    checkinsList.push({\n      //...doc.data(),\n      id: doc.id,\n      status: doc.data().status,\n      coords: {\n        lat: doc.data().coordinates.latitude,\n        long: doc.data().coordinates.longitude\n      },\n      distance: distance(checkin.coordinates.latitude, checkin.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n    });\n  });\n  return checkinsList;\n};","map":{"version":3,"sources":["C:/mydailystatus/lib/markers.js"],"names":["db","distance","checkExists","user","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","get","todaysData","data","findChecksNearbyCheckin","checkin","checkins","near","center","coordinates","radius","checkinsList","docs","forEach","push","id","status","coords","lat","latitude","long","longitude","toFixed"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAMC,IAAN,IAAe;AACtC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACQ,QAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA+C,GAA/C,GAAqDJ,KAAK,CAACK,OAAN,EAAzE,CAF8B,CAG9B;;AACA,QAAMC,aAAa,GAAG,MAAMV,EAAE,CACDW,UADD,CACY,SADZ,EAECC,GAFD,CAEKN,WAFL,EAGCK,UAHD,CAGY,QAHZ,EAICC,GAJD,CAIKT,IAJL,EAKCU,GALD,EAA5B;AAMA,QAAMC,UAAU,GAAGJ,aAAa,CAACK,IAAd,EAAnB;AACA,SAAOD,UAAP;AACX,CAZM,C,CAaP;;AACA,OAAO,MAAME,uBAAuB,GAAG,MAAMC,OAAN,IAAiB;AACpD,QAAMb,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA+C,GAA/C,GAAqDJ,KAAK,CAACK,OAAN,EAAzE;AACA,QAAMS,QAAQ,GAAG,MAAMlB,EAAE,CACRW,UADM,CACK,SADL,EAENC,GAFM,CAEFN,WAFE,EAGNK,UAHM,CAGK,QAHL,EAINQ,IAJM,CAID;AACFC,IAAAA,MAAM,EAAEH,OAAO,CAACI,WADd;AAEFC,IAAAA,MAAM,EAAE;AAFN,GAJC,EAQNT,GARM,EAAvB;AASA,QAAOU,YAAY,GAAG,EAAtB;AAEAL,EAAAA,QAAQ,CAACM,IAAT,CAAcC,OAAd,CAAsBb,GAAG,IAAE;AACvBW,IAAAA,YAAY,CAACG,IAAb,CAAkB;AACN;AACRC,MAAAA,EAAE,EAAEf,GAAG,CAACe,EAFM;AAGdC,MAAAA,MAAM,EAAEhB,GAAG,CAACG,IAAJ,GAAWa,MAHL;AAIdC,MAAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAElB,GAAG,CAACG,IAAJ,GAAWM,WAAX,CAAuBU,QADxB;AAEJC,QAAAA,IAAI,EAAEpB,GAAG,CAACG,IAAJ,GAAWM,WAAX,CAAuBY;AAFzB,OAJM;AAQdhC,MAAAA,QAAQ,EAAEA,QAAQ,CACdgB,OAAO,CAACI,WAAR,CAAoBU,QADN,EAEdd,OAAO,CAACI,WAAR,CAAoBY,SAFN,EAGdrB,GAAG,CAACG,IAAJ,GAAWM,WAAX,CAAuBU,QAHT,EAIdnB,GAAG,CAACG,IAAJ,GAAWM,WAAX,CAAuBY,SAJT,CAAR,CAKJC,OALI,CAKI,CALJ;AARI,KAAlB;AAeH,GAhBD;AAiBA,SAAOX,YAAP;AACH,CAhCM","sourcesContent":["import {db} from './db'\r\nimport { distance } from './geo'\r\n\r\nexport const checkExists = async(user) => {\r\n    const today = new Date()\r\n            const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n            //this operation\"db\" is a promise\r\n            const todaysCheckin = await db\r\n                                        .collection('markers')\r\n                                        .doc(currentDate)\r\n                                        .collection('checks')\r\n                                        .doc(user)\r\n                                        .get()\r\n            const todaysData = todaysCheckin.data()\r\n            return todaysData \r\n}\r\n//export default checkExists\r\nexport const findChecksNearbyCheckin = async checkin => {\r\n    const today = new Date()\r\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n    const checkins = await db\r\n                    .collection('markers')\r\n                    .doc(currentDate)\r\n                    .collection('checks')\r\n                    .near({\r\n                        center: checkin.coordinates,\r\n                        radius: 1000\r\n                    })\r\n                    .get()\r\n    const  checkinsList = [] \r\n            \r\n    checkins.docs.forEach(doc=>{\r\n        checkinsList.push({\r\n                    //...doc.data(),\r\n            id: doc.id,\r\n            status: doc.data().status,\r\n            coords: {\r\n                lat: doc.data().coordinates.latitude,\r\n                long: doc.data().coordinates.longitude\r\n            },\r\n            distance: distance(\r\n                checkin.coordinates.latitude, \r\n                checkin.coordinates.longitude, \r\n                doc.data().coordinates.latitude, \r\n                doc.data().coordinates.longitude\r\n                ).toFixed(2)\r\n        })\r\n    })\r\n    return checkinsList\r\n}"]},"metadata":{},"sourceType":"module"}